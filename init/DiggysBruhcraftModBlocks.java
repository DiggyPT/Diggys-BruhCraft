
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.diggysbruhcraft.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

import net.mcreator.diggysbruhcraft.block.TinOreBlock;
import net.mcreator.diggysbruhcraft.block.SlateBlock;
import net.mcreator.diggysbruhcraft.block.RubyOreBlock;
import net.mcreator.diggysbruhcraft.block.RubberTrapdoorBlock;
import net.mcreator.diggysbruhcraft.block.RubberStairsBlock;
import net.mcreator.diggysbruhcraft.block.RubberSlabBlock;
import net.mcreator.diggysbruhcraft.block.RubberSaplingBlock;
import net.mcreator.diggysbruhcraft.block.RubberPressurePlateBlock;
import net.mcreator.diggysbruhcraft.block.RubberPlanksBlock;
import net.mcreator.diggysbruhcraft.block.RubberLogEmptyBlock;
import net.mcreator.diggysbruhcraft.block.RubberLogBlock;
import net.mcreator.diggysbruhcraft.block.RubberLeavesBlock;
import net.mcreator.diggysbruhcraft.block.RubberFenceGateBlock;
import net.mcreator.diggysbruhcraft.block.RubberFenceBlock;
import net.mcreator.diggysbruhcraft.block.RubberDoorBlock;
import net.mcreator.diggysbruhcraft.block.RubberButtonBlock;
import net.mcreator.diggysbruhcraft.block.RizzvillePortalBlock;
import net.mcreator.diggysbruhcraft.block.RizzSandBlock;
import net.mcreator.diggysbruhcraft.block.RizzGrassyBlock;
import net.mcreator.diggysbruhcraft.block.RizzGrassBlock;
import net.mcreator.diggysbruhcraft.block.RizzDirtBlock;
import net.mcreator.diggysbruhcraft.block.RizzClayBlock;
import net.mcreator.diggysbruhcraft.block.PolishedGraciteBlock;
import net.mcreator.diggysbruhcraft.block.NutteTreeLogBlock;
import net.mcreator.diggysbruhcraft.block.NutteTrapdoorBlock;
import net.mcreator.diggysbruhcraft.block.NutteStairsBlock;
import net.mcreator.diggysbruhcraft.block.NutteSlabBlock;
import net.mcreator.diggysbruhcraft.block.NutteSaplingBlock;
import net.mcreator.diggysbruhcraft.block.NuttePressurePlateBlock;
import net.mcreator.diggysbruhcraft.block.NuttePlanksBlock;
import net.mcreator.diggysbruhcraft.block.NutteLeavesBlock;
import net.mcreator.diggysbruhcraft.block.NutteGateBlock;
import net.mcreator.diggysbruhcraft.block.NutteFenceBlock;
import net.mcreator.diggysbruhcraft.block.NutteDoorBlock;
import net.mcreator.diggysbruhcraft.block.NutteButtonBlock;
import net.mcreator.diggysbruhcraft.block.NutteBlock;
import net.mcreator.diggysbruhcraft.block.MccainiteBlock;
import net.mcreator.diggysbruhcraft.block.LightyBlock;
import net.mcreator.diggysbruhcraft.block.HyperNexusGuardianSpawnerBlock;
import net.mcreator.diggysbruhcraft.block.GrainBaleBlock;
import net.mcreator.diggysbruhcraft.block.GraciteBlock;
import net.mcreator.diggysbruhcraft.block.GooniteBricksBlock;
import net.mcreator.diggysbruhcraft.block.GooniteBlock;
import net.mcreator.diggysbruhcraft.block.FuelGeneratorBlock;
import net.mcreator.diggysbruhcraft.block.FourWayCableBlock;
import net.mcreator.diggysbruhcraft.block.EpikrokBlock;
import net.mcreator.diggysbruhcraft.block.EpikBrikWallBlock;
import net.mcreator.diggysbruhcraft.block.EpikBrikStairsBlock;
import net.mcreator.diggysbruhcraft.block.EpikBrikSlabBlock;
import net.mcreator.diggysbruhcraft.block.EpikBrikBlock;
import net.mcreator.diggysbruhcraft.block.ElectricSmelterBlock;
import net.mcreator.diggysbruhcraft.block.EelEggBlock;
import net.mcreator.diggysbruhcraft.block.DeepslateTinOreBlock;
import net.mcreator.diggysbruhcraft.block.CrusherBlock;
import net.mcreator.diggysbruhcraft.block.CokeOvenBlock;
import net.mcreator.diggysbruhcraft.block.CobbledSlateBlock;
import net.mcreator.diggysbruhcraft.block.BrixWallBlock;
import net.mcreator.diggysbruhcraft.block.BrixStairsBlock;
import net.mcreator.diggysbruhcraft.block.BrixSlabBlock;
import net.mcreator.diggysbruhcraft.block.BrixGlassBlock;
import net.mcreator.diggysbruhcraft.block.BrixBlock;
import net.mcreator.diggysbruhcraft.block.BatteryBlock;
import net.mcreator.diggysbruhcraft.block.AquamarineShaleBlock;
import net.mcreator.diggysbruhcraft.block.AlloySmelterBlock;
import net.mcreator.diggysbruhcraft.DiggysBruhcraftMod;

public class DiggysBruhcraftModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, DiggysBruhcraftMod.MODID);
	public static final RegistryObject<Block> TIN_ORE = REGISTRY.register("tin_ore", () -> new TinOreBlock());
	public static final RegistryObject<Block> DEEPSLATE_TIN_ORE = REGISTRY.register("deepslate_tin_ore", () -> new DeepslateTinOreBlock());
	public static final RegistryObject<Block> FUEL_GENERATOR = REGISTRY.register("fuel_generator", () -> new FuelGeneratorBlock());
	public static final RegistryObject<Block> BATTERY = REGISTRY.register("battery", () -> new BatteryBlock());
	public static final RegistryObject<Block> GOONITE = REGISTRY.register("goonite", () -> new GooniteBlock());
	public static final RegistryObject<Block> GOONITE_BRICKS = REGISTRY.register("goonite_bricks", () -> new GooniteBricksBlock());
	public static final RegistryObject<Block> RIZZVILLE_PORTAL = REGISTRY.register("rizzville_portal", () -> new RizzvillePortalBlock());
	public static final RegistryObject<Block> NUTTE_TREE_LOG = REGISTRY.register("nutte_tree_log", () -> new NutteTreeLogBlock());
	public static final RegistryObject<Block> NUTTE_PLANKS = REGISTRY.register("nutte_planks", () -> new NuttePlanksBlock());
	public static final RegistryObject<Block> NUTTE_LEAVES = REGISTRY.register("nutte_leaves", () -> new NutteLeavesBlock());
	public static final RegistryObject<Block> NUTTE = REGISTRY.register("nutte", () -> new NutteBlock());
	public static final RegistryObject<Block> SLATE = REGISTRY.register("slate", () -> new SlateBlock());
	public static final RegistryObject<Block> RIZZ_GRASS = REGISTRY.register("rizz_grass", () -> new RizzGrassBlock());
	public static final RegistryObject<Block> RIZZ_DIRT = REGISTRY.register("rizz_dirt", () -> new RizzDirtBlock());
	public static final RegistryObject<Block> RIZZ_SAND = REGISTRY.register("rizz_sand", () -> new RizzSandBlock());
	public static final RegistryObject<Block> NUTTE_SAPLING = REGISTRY.register("nutte_sapling", () -> new NutteSaplingBlock());
	public static final RegistryObject<Block> NUTTE_SLAB = REGISTRY.register("nutte_slab", () -> new NutteSlabBlock());
	public static final RegistryObject<Block> NUTTE_STAIRS = REGISTRY.register("nutte_stairs", () -> new NutteStairsBlock());
	public static final RegistryObject<Block> NUTTE_FENCE = REGISTRY.register("nutte_fence", () -> new NutteFenceBlock());
	public static final RegistryObject<Block> GRAIN_BALE = REGISTRY.register("grain_bale", () -> new GrainBaleBlock());
	public static final RegistryObject<Block> BRIX = REGISTRY.register("brix", () -> new BrixBlock());
	public static final RegistryObject<Block> COBBLED_SLATE = REGISTRY.register("cobbled_slate", () -> new CobbledSlateBlock());
	public static final RegistryObject<Block> AQUAMARINE_SHALE = REGISTRY.register("aquamarine_shale", () -> new AquamarineShaleBlock());
	public static final RegistryObject<Block> BRIX_STAIRS = REGISTRY.register("brix_stairs", () -> new BrixStairsBlock());
	public static final RegistryObject<Block> BRIX_SLAB = REGISTRY.register("brix_slab", () -> new BrixSlabBlock());
	public static final RegistryObject<Block> LIGHTY = REGISTRY.register("lighty", () -> new LightyBlock());
	public static final RegistryObject<Block> BRIX_WALL = REGISTRY.register("brix_wall", () -> new BrixWallBlock());
	public static final RegistryObject<Block> EEL_EGG = REGISTRY.register("eel_egg", () -> new EelEggBlock());
	public static final RegistryObject<Block> BRIX_GLASS = REGISTRY.register("brix_glass", () -> new BrixGlassBlock());
	public static final RegistryObject<Block> GRACITE = REGISTRY.register("gracite", () -> new GraciteBlock());
	public static final RegistryObject<Block> FOUR_WAY_CABLE = REGISTRY.register("four_way_cable", () -> new FourWayCableBlock());
	public static final RegistryObject<Block> CRUSHER = REGISTRY.register("crusher", () -> new CrusherBlock());
	public static final RegistryObject<Block> RIZZ_GRASSY = REGISTRY.register("rizz_grassy", () -> new RizzGrassyBlock());
	public static final RegistryObject<Block> RUBBER_LOG = REGISTRY.register("rubber_log", () -> new RubberLogBlock());
	public static final RegistryObject<Block> RUBBER_LEAVES = REGISTRY.register("rubber_leaves", () -> new RubberLeavesBlock());
	public static final RegistryObject<Block> RUBBER_SAPLING = REGISTRY.register("rubber_sapling", () -> new RubberSaplingBlock());
	public static final RegistryObject<Block> RUBY_ORE = REGISTRY.register("ruby_ore", () -> new RubyOreBlock());
	public static final RegistryObject<Block> NUTTE_TRAPDOOR = REGISTRY.register("nutte_trapdoor", () -> new NutteTrapdoorBlock());
	public static final RegistryObject<Block> NUTTE_DOOR = REGISTRY.register("nutte_door", () -> new NutteDoorBlock());
	public static final RegistryObject<Block> NUTTE_GATE = REGISTRY.register("nutte_gate", () -> new NutteGateBlock());
	public static final RegistryObject<Block> POLISHED_GRACITE = REGISTRY.register("polished_gracite", () -> new PolishedGraciteBlock());
	public static final RegistryObject<Block> RIZZ_CLAY = REGISTRY.register("rizz_clay", () -> new RizzClayBlock());
	public static final RegistryObject<Block> RUBBER_LOG_EMPTY = REGISTRY.register("rubber_log_empty", () -> new RubberLogEmptyBlock());
	public static final RegistryObject<Block> RUBBER_PLANKS = REGISTRY.register("rubber_planks", () -> new RubberPlanksBlock());
	public static final RegistryObject<Block> ELECTRIC_SMELTER = REGISTRY.register("electric_smelter", () -> new ElectricSmelterBlock());
	public static final RegistryObject<Block> MCCAINITE = REGISTRY.register("mccainite", () -> new MccainiteBlock());
	public static final RegistryObject<Block> EPIKROK = REGISTRY.register("epikrok", () -> new EpikrokBlock());
	public static final RegistryObject<Block> EPIK_BRIK = REGISTRY.register("epik_brik", () -> new EpikBrikBlock());
	public static final RegistryObject<Block> COKE_OVEN = REGISTRY.register("coke_oven", () -> new CokeOvenBlock());
	public static final RegistryObject<Block> ALLOY_SMELTER = REGISTRY.register("alloy_smelter", () -> new AlloySmelterBlock());
	public static final RegistryObject<Block> RUBBER_SLAB = REGISTRY.register("rubber_slab", () -> new RubberSlabBlock());
	public static final RegistryObject<Block> RUBBER_STAIRS = REGISTRY.register("rubber_stairs", () -> new RubberStairsBlock());
	public static final RegistryObject<Block> RUBBER_FENCE = REGISTRY.register("rubber_fence", () -> new RubberFenceBlock());
	public static final RegistryObject<Block> NUTTE_BUTTON = REGISTRY.register("nutte_button", () -> new NutteButtonBlock());
	public static final RegistryObject<Block> NUTTE_PRESSURE_PLATE = REGISTRY.register("nutte_pressure_plate", () -> new NuttePressurePlateBlock());
	public static final RegistryObject<Block> RUBBER_BUTTON = REGISTRY.register("rubber_button", () -> new RubberButtonBlock());
	public static final RegistryObject<Block> RUBBER_PRESSURE_PLATE = REGISTRY.register("rubber_pressure_plate", () -> new RubberPressurePlateBlock());
	public static final RegistryObject<Block> RUBBER_FENCE_GATE = REGISTRY.register("rubber_fence_gate", () -> new RubberFenceGateBlock());
	public static final RegistryObject<Block> RUBBER_TRAPDOOR = REGISTRY.register("rubber_trapdoor", () -> new RubberTrapdoorBlock());
	public static final RegistryObject<Block> RUBBER_DOOR = REGISTRY.register("rubber_door", () -> new RubberDoorBlock());
	public static final RegistryObject<Block> HYPER_NEXUS_GUARDIAN_SPAWNER = REGISTRY.register("hyper_nexus_guardian_spawner", () -> new HyperNexusGuardianSpawnerBlock());
	public static final RegistryObject<Block> EPIK_BRIK_STAIRS = REGISTRY.register("epik_brik_stairs", () -> new EpikBrikStairsBlock());
	public static final RegistryObject<Block> EPIK_BRIK_SLAB = REGISTRY.register("epik_brik_slab", () -> new EpikBrikSlabBlock());
	public static final RegistryObject<Block> EPIK_BRIK_WALL = REGISTRY.register("epik_brik_wall", () -> new EpikBrikWallBlock());
	// Start of user code block custom blocks
	// End of user code block custom blocks
}
